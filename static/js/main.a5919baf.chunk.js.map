{"version":3,"sources":["api/Foursquare.js","components/SearchOptions.js","components/FilterOptions.js","components/Venue.js","components/VenuesList.js","components/SideMenu.js","components/Spinner.js","components/MapContainer.js","App.js","serviceWorker.js","components/GoogleError.js","index.js"],"names":["CLIENT_ID","CLIENT_SECRET","getVenues","area","venue","limit","fetch","concat","trim","toLowerCase","then","response","json","result","venues","getVenuePhoto","venueId","photos","items","SearchOptions","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","_ref","target","setState","defineProperty","name","value","search","AREA_EMPTY","AREA_INVALID","length","VENUE_EMPTY","VENUE_INVALID","areaInput","current","className","setTimeout","venueInput","onSearch","React","createRef","react_default","a","createElement","tabIndex","aria-label","htmlFor","ref","id","type","maxLength","placeholder","onChange","defaultValue","role","onClick","Component","FilterOptions","e","onFilter","Venue","onVenueClick","VenuesList","venueClick","venueName","document","querySelector","click","_this2","filteredVenues","map","index","components_Venue","key","PureComponent","SideMenu","searchQuery","filter","filterQuery","Fragment","components_SearchOptions","components_FilterOptions","components_VenuesList","Spinner","spinner","src","alt","MapContainer","selectedVenue","activeMarker","showingInfoWindow","centerMap","bounds","google","maps","LatLngBounds","boundPoints","forEach","boundPoint","extend","onMarkerClick","marker","title","venuePhoto","Foursquare","prefix","suffix","img","catch","onInfoWindowClose","dist","initialCenter","lat","lng","zoom","position","location","animation","Animation","BOUNCE","icon","url","scaledSize","Size","visible","onClose","country","city","street","GoogleApiWrapper","apiKey","LoadingContainer","App","toggleLoader","num","style","display","foursquareVenues","alert","foursquareVenue","push","address","includes","components_SideMenu","components_Spinner","components_MapContainer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","GoogleError","gm_authFailure","ReactDOM","render","components_GoogleError","getElementById","src_App_0","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a5919baf.chunk.js","sourcesContent":["const CLIENT_ID = 'LNKEUMRCDZDQI3NFHAFGSBW23FFJL14AI5AVFXNAHY3TR0V2';\r\nconst CLIENT_SECRET = 'EKIM4SFIW5H12UNYE5CX5SCC4NDSZLSY1JDLPIEWVK4SPTSK';\r\nconst VERSION = 20180323;\r\n\r\nexport const getVenues = (area, venue, limit) => {\r\n  return fetch(`https://api.foursquare.com/v2/venues/search?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=${VERSION}&limit=${limit}&near=${area.trim().toLowerCase()}&radius=100000&query=${venue.trim().toLowerCase()}`)\r\n    .then(response => response.json())\r\n    .then(result => result.response.venues);\r\n}\r\n\r\nexport const getVenuePhoto = venueId => {\r\n  return fetch(`https://api.foursquare.com/v2/venues/${venueId}/photos?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=${VERSION}`)\r\n    .then(response => response.json())\r\n    .then(result => result.response.photos.items);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchOptions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // create a refs to store textInput DOM elements\r\n        this.areaInput = React.createRef();\r\n        this.venueInput = React.createRef();\r\n    }\r\n\r\n    static propTypes = {\r\n        onSearch: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        area: 'Dubai',\r\n        venue: 'School',\r\n        limit: 5\r\n    };\r\n\r\n    handleChange = ({target}) => {\r\n        this.setState({ [target.name]: target.value });\r\n    };\r\n\r\n    search = () => {\r\n        const AREA_EMPTY = !this.state.area;\r\n        const AREA_INVALID = (this.state.area.length === 1) || (this.state.area[1] === ' ');\r\n        const VENUE_EMPTY = !this.state.venue;\r\n        const VENUE_INVALID = (this.state.venue.length === 1) || (this.state.venue[1] === ' ');\r\n        const SEARCH_INVALID = AREA_EMPTY || AREA_INVALID || VENUE_EMPTY || VENUE_INVALID;\r\n        if (SEARCH_INVALID) {\r\n            if (AREA_EMPTY || AREA_INVALID) {\r\n                this.areaInput.current.className = \"invalid-field\";\r\n                setTimeout(() => {\r\n                    this.areaInput.current.className = \"\";\r\n                }, 1500);\r\n            }\r\n            if (VENUE_EMPTY || VENUE_INVALID) {\r\n                this.venueInput.current.className = \"invalid-field\";\r\n                setTimeout(() => {\r\n                    this.venueInput.current.className = \"\";\r\n                }, 1500);\r\n            }\r\n        } else {\r\n            this.props.onSearch(this.state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"search-options\" tabIndex=\"2\" aria-label=\"Search Options\">\r\n                <h2>Search Options</h2>\r\n                <div className=\"options\">\r\n                    <label htmlFor=\"area\" >Area</label>\r\n                    <input ref={this.areaInput} id=\"area\" type=\"text\" tabIndex=\"3\" aria-label=\"Search Country, City or Area\" name=\"area\" maxLength=\"25\" placeholder=\"Dubai, New York, Frankfurt\" onChange={this.handleChange} defaultValue=\"Dubai\" />\r\n                    <label htmlFor=\"venue\" >Venue</label>\r\n                    <input ref={this.venueInput} id=\"venue\" type=\"text\"tabIndex=\"4\" aria-label=\"Search Venue Name\" name=\"venue\" maxLength=\"25\" placeholder=\"School, Restaurant, Coffee\" onChange={this.handleChange}  defaultValue=\"School\" />\r\n                    <label htmlFor=\"limit\" >Limit</label>\r\n                    <select id=\"limit\" tabIndex=\"5\" role=\"tablist\" aria-label=\"Limit Search\" name=\"limit\" defaultValue=\"5\" onChange={this.handleChange}>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"15\">15</option>\r\n                        <option value=\"20\">20</option>\r\n                    </select>\r\n                </div>\r\n                <button tabIndex=\"6\" aria-label=\"Search\" onClick={this.search}>Search</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchOptions;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterOptions = props => (\r\n    <div className=\"filter-options\" tabIndex=\"7\" aria-label=\"Filter Results\">\r\n        <h2>Filter Results</h2>\r\n        <div className=\"options\">\r\n            <input id=\"filter\" type=\"text\" tabIndex=\"8\" aria-label=\"Filter Venues by Name\" maxLength=\"25\" placeholder=\"Venue Name\" onChange={e => {\r\n                props.onFilter(e.target.value.trim().toLowerCase());\r\n            }} />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nFilterOptions.propTypes= {\r\n    onFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FilterOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Venue = props => (\r\n    <li className=\"venue\">\r\n        <button tabIndex={props.tabIndex} onClick={() => props.onVenueClick(props.venue.name)}>{props.venue.name}</button>\r\n    </li>\r\n);\r\n\r\nVenue.propTypes= {\r\n    venue: PropTypes.object.isRequired,\r\n    onVenueClick: PropTypes.func.isRequired,\r\n    tabIndex: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Venue;\r\n","import React from 'react';\r\nimport Venue from './Venue';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass VenuesList extends React.PureComponent {\r\n    static propTypes = {\r\n        filteredVenues: PropTypes.arrayOf(PropTypes.object).isRequired\r\n    }\r\n\r\n    venueClick = venueName => {\r\n        document.querySelector(`[title=\"${venueName}\"]`).click();\r\n    }\r\n\r\n    render() {\r\n        let filteredVenues = this.props.filteredVenues;\r\n        return(\r\n            <div className=\"venues\">\r\n                {filteredVenues.length !== 0 ? (\r\n                    <p className=\"message\">{filteredVenues.length} Result{filteredVenues.length === 1 ? '' : 's'}</p>\r\n                ) : (\r\n                    <p className=\"message\">No Results</p>\r\n                )}\r\n                <ul className=\"venues-list\" tabIndex=\"9\" aria-label=\"List of Venues\">\r\n                    {this.props.filteredVenues\r\n                        .map((venue, index) => (<Venue venue={venue} key={venue.id} onVenueClick={this.venueClick} tabIndex={index + 10} />))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VenuesList;\r\n","import React from 'react';\r\nimport SearchOptions from './SearchOptions';\r\nimport FilterOptions from './FilterOptions';\r\nimport VenuesList from './VenuesList';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SideMenu extends React.Component {\r\n    static propTypes = {\r\n        onSearch: PropTypes.func.isRequired,\r\n        onFilter: PropTypes.func.isRequired,\r\n        filteredVenues: PropTypes.arrayOf(PropTypes.object).isRequired\r\n    }\r\n\r\n    search = searchQuery => {\r\n        this.props.onSearch(searchQuery)\r\n    }\r\n\r\n    filter = filterQuery => {\r\n        this.props.onFilter(filterQuery);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <SearchOptions onSearch={this.search} />\r\n            <FilterOptions onFilter={this.filter} />\r\n            <VenuesList filteredVenues={this.props.filteredVenues} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Spinner = props => (\r\n    props.spinner ? (\r\n        <div className=\"loader\">\r\n            <img src=\"spinner.svg\" alt=\"Spinner\" />\r\n        </div>\r\n    ) : (\r\n        <div className=\"google-loader\">\r\n            <img src=\"spinner.svg\" alt=\"Spinner\" />\r\n        </div>\r\n    )\r\n);\r\n\r\nSpinner.propTypes= {\r\n    spinner: PropTypes.bool\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport {Map, Marker, InfoWindow, GoogleApiWrapper} from 'google-maps-react';\r\nimport * as Foursquare from '../api/Foursquare';\r\nimport Spinner from './Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MapContainer extends React.Component {\r\n    static propTypes = {\r\n        filteredVenues: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n        boundPoints: PropTypes.arrayOf(PropTypes.shape({\r\n            lat: PropTypes.number.isRequired,\r\n            lng: PropTypes.number.isRequired\r\n        })).isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        // if you want to see the error screen that appears if google fails to load the map uncomment the line below\r\n        // window.gm_authFailure();\r\n        // the line of code above has nothing to do with the app, it is just to show the error screen\r\n    }\r\n\r\n    state = {\r\n        selectedVenue: {},\r\n        activeMarker: {},\r\n        showingInfoWindow: false\r\n    };\r\n\r\n    centerMap = () => {\r\n        let bounds = new this.props.google.maps.LatLngBounds();\r\n        this.props.boundPoints.forEach(boundPoint => {\r\n            bounds.extend(boundPoint);\r\n        });\r\n        return bounds;\r\n    }\r\n\r\n    onMarkerClick = (props, marker) => {\r\n        let selectedVenue = this.props.filteredVenues.filter(venue => venue.name === props.title)\r\n        let venuePhoto = '';\r\n        let size = '150';\r\n        Foursquare.getVenuePhoto(selectedVenue[0].id)\r\n            .then(response => { // look for an image for the selected venue\r\n                venuePhoto = `${response[0].prefix}${size}${response[0].suffix}`;\r\n                selectedVenue[0].img = venuePhoto;\r\n                this.setState({\r\n                    selectedVenue: selectedVenue[0],\r\n                    activeMarker: marker,\r\n                    showingInfoWindow: true\r\n                });\r\n            })\r\n            .catch(() => { // if no image is found then leave it empty\r\n                selectedVenue[0].img = '';\r\n                this.setState({\r\n                    selectedVenue: selectedVenue[0],\r\n                    activeMarker: marker,\r\n                    showingInfoWindow: true\r\n                });\r\n            });\r\n    }\r\n\r\n    onInfoWindowClose = () => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                selectedVenue: {},\r\n                activeMarker: {},\r\n                showingInfoWindow: false,\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Map\r\n                role=\"application\"\r\n                aria-label=\"map\"\r\n                google={this.props.google}\r\n                initialCenter={{lat: 25.39, lng: -2.52}}\r\n                zoom={2}\r\n                bounds={this.centerMap()}\r\n                onClick={this.onInfoWindowClose}\r\n            >\r\n                {this.props.filteredVenues.map(venue =>\r\n                    <Marker\r\n                        key={venue.id}\r\n                        title={venue.name}\r\n                        name={venue.name}\r\n                        position={{lat: venue.location.lat, lng: venue.location.lng}}\r\n                        onClick={this.onMarkerClick}\r\n                        animation={this.state.activeMarker.name === venue.name && this.props.google.maps.Animation.BOUNCE}\r\n                        icon={{\r\n                            url : \"marker-icon.png\",\r\n                            scaledSize: new this.props.google.maps.Size(50,50)\r\n                        }}\r\n                    />\r\n                )}\r\n                <InfoWindow\r\n                    marker={this.state.activeMarker}\r\n                    visible={this.state.showingInfoWindow}\r\n                    onClose={this.onInfoWindowClose}\r\n                >\r\n                        <div className=\"infoWindow-content\">\r\n                            <h3>{this.state.selectedVenue.name}</h3>\r\n                            {this.state.selectedVenue.img ? (\r\n                                <img src={this.state.selectedVenue.img} alt={'Image of ' + this.state.selectedVenue.name} />\r\n                            ) : ( // if venue has no image then give it a 'missing image' image\r\n                                <img src='no-image.png' alt=\"No images Found\" />\r\n                            )}\r\n                            <div className=\"infoWindow-text\">\r\n                                <p><span>Country: </span>{this.state.selectedVenue.country}</p>\r\n                                <p><span>City: </span>{this.state.selectedVenue.city}</p>\r\n                                <p><span>State: </span>{this.state.selectedVenue.state}</p>\r\n                                <p><span>Street: </span>{this.state.selectedVenue.street}</p>\r\n                            </div>\r\n                            <span>Data from Foursquare.</span>\r\n                        </div>\r\n                </InfoWindow>\r\n            </Map>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBppTSlqCQ3KaiqDeYRgdTZqv0Cw_z24lk',\r\n    LoadingContainer: Spinner\r\n})(MapContainer);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport * as Foursquare from './api/Foursquare';\r\nimport SideMenu from './components/SideMenu';\r\nimport MapContainer from './components/MapContainer';\r\nimport Spinner from './components/Spinner';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    venues: [],\r\n    filterQuery: '',\r\n    filteredVenues: [],\r\n    boundPoints: [\r\n      {lat: 35, lng: -25},\r\n      {lat: 15, lng: 40}\r\n    ]\r\n  }\r\n\r\n  toggleLoader = num => {\r\n    const LOADER = document.querySelector('section > .loader');\r\n    LOADER.style.display = num === 1 ? 'flex' : 'none';\r\n  }\r\n\r\n  search = searchQuery => {\r\n    this.toggleLoader(1);\r\n    Foursquare.getVenues(searchQuery.area, searchQuery.venue, searchQuery.limit)\r\n      .then(foursquareVenues => {\r\n        if (!foursquareVenues.length) { // receiving and empty array should also be considered an error\r\n          alert('No Results');\r\n          this.toggleLoader(0);\r\n          return;\r\n        } else {\r\n          let venues = [];\r\n          let boundPoints = [];\r\n          foursquareVenues.forEach(foursquareVenue => {\r\n            venues.push({\r\n              id: foursquareVenue.id,\r\n              name: foursquareVenue.name,\r\n              country: foursquareVenue.location.country,\r\n              city: foursquareVenue.location.city,\r\n              state: foursquareVenue.location.state,\r\n              street: foursquareVenue.location.address,\r\n              location: {\r\n                lat: foursquareVenue.location.lat,\r\n                lng: foursquareVenue.location.lng\r\n              },\r\n              img: ''\r\n            });\r\n            boundPoints.push({\r\n              lat: foursquareVenue.location.lat,\r\n              lng: foursquareVenue.location.lng\r\n            });\r\n          });\r\n          this.setState({venues, boundPoints});\r\n          this.filter(this.state.filterQuery);\r\n          this.toggleLoader(0);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        alert('No Results');\r\n        this.toggleLoader(0);\r\n      });\r\n  }\r\n\r\n  filter = filterQuery => {\r\n    if (filterQuery) {\r\n      this.setState(state => ({\r\n        filterQuery: filterQuery,\r\n        filteredVenues: state.venues.filter(venue => venue.name.toLowerCase().includes(filterQuery))\r\n      }));\r\n    } else {\r\n      this.setState(state => ({\r\n        filterQuery: '',\r\n        filteredVenues: state.venues\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header>\r\n          <h1 tabIndex=\"1\" aria-label=\"Neighborhood Map\">Neighborhood Map</h1>\r\n        </header>\r\n        <main>\r\n          <aside>\r\n            <SideMenu onSearch={this.search} onFilter={this.filter} filteredVenues={this.state.filteredVenues} />\r\n          </aside>\r\n          <section>\r\n            <Spinner spinner={true} />\r\n            <MapContainer filteredVenues={this.state.filteredVenues} boundPoints={this.state.boundPoints} />\r\n          </section>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst GoogleError = props => (\r\n    <div className=\"google-error\">\r\n        <p>oh no...</p>\r\n        <h2>There was an error loading the map</h2>\r\n        <p>Sorry...please check back in just a moment.</p>\r\n    </div>\r\n);\r\n\r\nexport default GoogleError;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport GoogleError from './components/GoogleError';\r\n\r\nwindow.gm_authFailure = () => {\r\n    ReactDOM.render(<GoogleError />, document.getElementById('root'));\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}